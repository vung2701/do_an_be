# Generated by Django 4.2.7 on 2024-04-08 17:17

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('knowledge', '0002_knowledge_created_on_knowledge_modified_on'),
        ('src_code', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('author_description', models.TextField(default='Please do not leave me blank')),
                ('published_on', models.DateField()),
                ('image', models.ImageField(upload_to='article/')),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('spotlight', models.BooleanField(db_index=True, default=None)),
                ('spotlight_image', models.ImageField(blank=True, upload_to='spotlight_image/')),
                ('spotlight_from', models.DateField(blank=True, db_index=True, default=django.utils.timezone.now, null=True)),
                ('spotlight_to', models.DateField(blank=True, db_index=True, null=True)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('comments', models.PositiveIntegerField(default=0)),
                ('reference_link', models.URLField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('author_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_user', to='user.user')),
                ('comment_auth', models.ManyToManyField(blank=True, related_name='article_auth_commenter', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='comment_article/')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by_image', models.ImageField(blank=True, null=True, upload_to='user_image')),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('comments', models.PositiveIntegerField(default=0)),
                ('comment_auth', models.ManyToManyField(blank=True, related_name='comment_auth_commenter', to=settings.AUTH_USER_MODEL)),
                ('comment_list', models.ManyToManyField(blank=True, related_name='comment_comment_list', to='article.comment')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_creator', to='user.user')),
                ('like_auth', models.ManyToManyField(blank=True, related_name='comment_auth_liker', to=settings.AUTH_USER_MODEL)),
                ('like_list', models.ManyToManyField(blank=True, related_name='comment_like_list', to='user.user')),
                ('parent_article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_article', to='article.article')),
                ('parent_comment', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='article.comment')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='comment_list',
            field=models.ManyToManyField(blank=True, related_name='article_comment_list', to='article.comment'),
        ),
        migrations.AddField(
            model_name='article',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article_created_by', to='user.user'),
        ),
        migrations.AddField(
            model_name='article',
            name='knowledge',
            field=models.ManyToManyField(blank=True, related_name='article_knowledge', to='knowledge.knowledge'),
        ),
        migrations.AddField(
            model_name='article',
            name='like_auth',
            field=models.ManyToManyField(blank=True, related_name='article_auth_liker', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='article',
            name='like_list',
            field=models.ManyToManyField(blank=True, related_name='article_like_list', to='user.user'),
        ),
        migrations.AddField(
            model_name='article',
            name='src_code',
            field=models.ManyToManyField(blank=True, related_name='article_src_code', to='src_code.srccode'),
        ),
    ]
